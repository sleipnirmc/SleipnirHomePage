rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user is member
    function isMember() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isMember == true;
    }
    
    // Products collection - everyone can read, only admins can write
    match /products/{document=**} {
      allow read: if true;  // All users (including non-authenticated) can view products
      allow create, update, delete: if isAdmin();
    }
    
    // Users collection - users can read/update their own profile, admins can read all
    match /users/{userId} {
      // Users can always read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;
      // Admins can read any profile (without circular dependency)
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null && 
        request.auth.uid == userId;
      allow update: if request.auth != null && 
        request.auth.uid == userId;
      // Admin can update any user
      allow update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Orders collection - users can read their own orders, admins can read all
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if request.auth != null;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Members collection - everyone can read, only admins can write
    match /members/{document=**} {
      allow read: if true;  // All users (including non-authenticated) can view members
      allow create, update, delete: if isAdmin();
    }
    
    // Contact submissions - anyone can create, only admins can read
    match /contacts/{document=**} {
      allow create: if true;
      allow read, update, delete: if isAdmin();
    }
    
    // Display members collection - everyone can read, only admins can write
    match /displayMembers/{document=**} {
      allow read: if true;  // All users (including non-authenticated) can view display members
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}